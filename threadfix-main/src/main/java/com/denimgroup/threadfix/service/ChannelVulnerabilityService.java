////////////////////////////////////////////////////////////////////////
//
//     Copyright (c) 2009-2013 Denim Group, Ltd.
//
//     The contents of this file are subject to the Mozilla Public License
//     Version 2.0 (the "License"); you may not use this file except in
//     compliance with the License. You may obtain a copy of the License at
//     http://www.mozilla.org/MPL/
//
//     Software distributed under the License is distributed on an "AS IS"
//     basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
//     License for the specific language governing rights and limitations
//     under the License.
//
//     The Original Code is ThreadFix.
//
//     The Initial Developer of the Original Code is Denim Group, Ltd.
//     Portions created by Denim Group, Ltd. are Copyright (C)
//     Denim Group, Ltd. All Rights Reserved.
//
//     Contributor(s): Denim Group, Ltd.
//
////////////////////////////////////////////////////////////////////////
package com.denimgroup.threadfix.service;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.Calendar;
import java.util.List;

import com.denimgroup.threadfix.data.entities.ChannelVulnerability;

public interface ChannelVulnerabilityService {
	
	static class ScanPluginCheckBean {
		public final boolean canUpdate;
		public final Calendar lastImportDate;
		public final Calendar currentPluginDate;
		
		public boolean isCanUpdate() {
			return canUpdate;
		}

		public Calendar getLastImportDate() {
			return lastImportDate;
		}

		public Calendar getCurrentPluginDate() {
			return currentPluginDate;
		}

		public ScanPluginCheckBean(boolean canUpdate, Calendar lastImportDate, Calendar currentPluginDate) {
			this.canUpdate = canUpdate;
			this.lastImportDate = lastImportDate;
			this.currentPluginDate = currentPluginDate;
		}
	}
	
	/**
	 * Load suggestions based on a prefix.
	 * 
	 * @param prefix
	 * @return
	 */
	List<ChannelVulnerability> loadSuggested(String prefix);

	/**
	 * 
	 * @param code
	 * @return
	 */
	boolean isValidManualName(String code);

	/**
	 * 
	 * @return
	 */
	List<ChannelVulnerability> loadAllManual();
	
	/**
	 * 
	 * @return
	 */
	ScanPluginCheckBean checkPluginJar();
	
	/**
	 * 
	 * 
	 */
	List<String[]> updateChannelVulnerabilities() throws IOException, URISyntaxException;

    /**
     *
     */
    List<String> getSupportedScanners();
}
