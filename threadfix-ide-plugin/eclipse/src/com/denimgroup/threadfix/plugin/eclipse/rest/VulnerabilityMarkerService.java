////////////////////////////////////////////////////////////////////////
//
//     Copyright (c) 2009-2013 Denim Group, Ltd.
//
//     The contents of this file are subject to the Mozilla Public License
//     Version 2.0 (the "License"); you may not use this file except in
//     compliance with the License. You may obtain a copy of the License at
//     http://www.mozilla.org/MPL/
//
//     Software distributed under the License is distributed on an "AS IS"
//     basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
//     License for the specific language governing rights and limitations
//     under the License.
//
//     The Original Code is ThreadFix.
//
//     The Initial Developer of the Original Code is Denim Group, Ltd.
//     Portions created by Denim Group, Ltd. are Copyright (C)
//     Denim Group, Ltd. All Rights Reserved.
//
//     Contributor(s): Denim Group, Ltd.
//
////////////////////////////////////////////////////////////////////////
package com.denimgroup.threadfix.plugin.eclipse.rest;

import java.util.ArrayList;
import java.util.List;

import com.denimgroup.threadfix.plugin.eclipse.util.SettingsUtils;
import com.denimgroup.threadfix.plugin.eclipse.util.VulnerabilityMarker;

public class VulnerabilityMarkerService {
	
	public static List<VulnerabilityMarker> getMarkers() {
		List<VulnerabilityMarker> outerList = new ArrayList<VulnerabilityMarker>();
		
		for (String appId : SettingsUtils.getConfiguredApplications()) {
			outerList.addAll(getMarkers(appId));
		}
		
		return outerList;
	}
	
	private static List<VulnerabilityMarker> getMarkers(String appId) {
		List<VulnerabilityMarker> markers = new ArrayList<VulnerabilityMarker>();
		String csvString = getMarkerCSV(appId);
		
		String[] lines = csvString.split("\n");
		
		for (String line : lines) {
			if (line != null && !line.isEmpty()) {
				VulnerabilityMarker marker = VulnerabilityMarker.getMarker(line.split(","));
				
				if (marker != null) {
					markers.add(marker);
				}
			}
		}
		
		return markers;
	}
	
	private static String getMarkerCSV(String appId) {
		return RestUtils.getFromSettings().getMarkers(appId);
	}

}
